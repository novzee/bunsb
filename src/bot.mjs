import TeleBot from 'telebot';
import schedule from 'node-schedule';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TeleBot(process.env.TELEGRAM_BOT_TOKEN);

// –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chatId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const users = new Set();

let startCommandCounter = 0;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.on('/start', async (msg) => {
  startCommandCounter++;
  console.log(`Received /start command. Counter: ${startCommandCounter}`);

  const chatId = msg.chat.id;
  const firstName = msg.from.first_name || 'there';

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º chatId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  users.add(chatId);
  console.log(`Added user: ${chatId}`);

  // –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
  const firstMessage = `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üéâ\n\n–ú—ã —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—à—É –Ω–æ–≤—É—é –∏–≥—Ä—É!`;

  await bot.sendMessage(chatId, firstMessage, {
    parseMode: 'Markdown',
    replyMarkup: bot.inlineKeyboard([
      [
        bot.inlineButton('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É üïπ', { url: 'https://racingapp.devnullteam.ru' }),
        bot.inlineButton('–ü—Ä–∞–≤–∏–ª–∞ üìú', { callback: 'show_rules' })
      ]
    ])
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∞–≤–∏–ª–∞"
bot.on('callbackQuery', async (msg) => {
  if (msg.data === 'show_rules') {
    const chatId = msg.message.chat.id;

    const rulesMessage = `*–ü–†–ê–í–ò–õ–ê –ò–ì–†–´*\n\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º —Ç–µ–±—è –∑–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å! üöÄ\n\n1. *–ö–∞—Ä—Ç–∞* üó∫\n2. *–ì–∞—Ä–∞–∂* üè†\n3. *–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤* üèÖ\n\n–ü–æ–µ—Ö–∞–ª–∏? üèéüèé`;

    await bot.sendMessage(chatId, rulesMessage, { parseMode: 'Markdown' });
  }
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ –¥–≤–µ –º–∏–Ω—É—Ç—ã
schedule.scheduleJob('*/2 * * * *', async () => {
  console.log(`–ó–∞–ø—É—â–µ–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –≤ ${new Date().toLocaleTimeString()}`);

  if (users.size === 0) {
    console.log('–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.');
    return;
  }

  for (const chatId of users) {
    try {
      await bot.sendMessage(chatId, '–î–∞–≤–Ω–æ —Ç–µ–±—è –Ω–µ –±—ã–ª–æ –≤ —É–ª–∏—á–Ω—ã—Ö –≥–æ–Ω–∫–∞—Ö! üèéüí®');
      console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}:`, error.message);
    }
  }
});

export default bot;
