import TeleBot from 'telebot';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TeleBot(process.env.TELEGRAM_BOT_TOKEN);

// –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chatId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const users = new Set();

let startCommandCounter = 0;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.on('/start', async (msg) => {
  startCommandCounter++;
  console.log(`Received /start command. Counter: ${startCommandCounter}`);

  const chatId = msg.chat.id;
  const firstName = msg.from.first_name || 'there';

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º chatId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  users.add(chatId);
  console.log(`Added user: ${chatId}`);

  // –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
  const languageSelectionMessage = `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üéâ\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —è–∑—ã–∫:`;

  await bot.sendMessage(chatId, languageSelectionMessage, {
    parseMode: 'Markdown',
    replyMarkup: bot.inlineKeyboard([
      [bot.inlineButton('–†—É—Å—Å–∫–∏–π üá∑üá∫', { callback: 'ru' })],
      [bot.inlineButton('–ë–µ–ª–∞—Ä—É—Å—Å–∫–∏–π üáßüáæ', { callback: 'be' })],
      [bot.inlineButton('–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π üá∞üáø', { callback: 'kk' })]
    ])
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
bot.on('callbackQuery', async (msg) => {
  const chatId = msg.message.chat.id;
  const selectedLanguage = msg.data;

  let firstMessage = '';
  let rulesMessage = '';
  let startGameLabel = '';
  let rulesLabel = '';

  if (selectedLanguage === 'ru') {
    firstMessage = `–ü—Ä–∏–≤–µ—Ç! üéâ\n\n–ú—ã —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—à—É –Ω–æ–≤—É—é –∏–≥—Ä—É! üöÄüí∞`;
    rulesMessage = `–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ üìú\n\n...`;
    startGameLabel = '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É üïπ';
    rulesLabel = '–ü—Ä–∞–≤–∏–ª–∞ üìú';
  } else if (selectedLanguage === 'be') {
    firstMessage = `–í—ñ—Ç–∞–µ–º! üéâ\n\n–ú—ã —Ä–∞–¥—ã, —à—Ç–æ —Ç—ã –≤—ã—Ä–∞—à—ã—û —Å–ø—Ä–∞–±–∞–≤–∞—Ü—å –Ω–∞—à—É –Ω–æ–≤—É—é –≥—É–ª—å–Ω—é! üöÄüí∞`;
    rulesMessage = `–ü—Ä–∞–≤—ñ–ª—ã –≥—É–ª—å–Ω—ñ –Ω–∞ –±–µ–ª–∞—Ä—É—Å–∫–∞–π –º–æ–≤–µ üìú\n\n...`;
    startGameLabel = '–ü–∞—á–∞—Ü—å –≥—É–ª—å–Ω—é üïπ';
    rulesLabel = '–ü—Ä–∞–≤—ñ–ª—ã üìú';
  } else if (selectedLanguage === 'kk') {
    firstMessage = `–°”ô–ª–µ–º! üéâ\n\n–ë—ñ–∑ –∂–∞“£–∞ –æ–π—ã–Ω–¥—ã —Å—ã–Ω–∞–ø –∫”©—Ä—É–≥–µ —à–µ—à—ñ–º—ñ“£—ñ–∑–≥–µ “õ—É–∞–Ω—ã—à—Ç—ã–º—ã–∑! üöÄüí∞`;
    rulesMessage = `–û–π—ã–Ω –µ—Ä–µ–∂–µ–ª–µ—Ä—ñ “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–¥–µ üìú\n\n...`;
    startGameLabel = '–û–π—ã–Ω–¥—ã –±–∞—Å—Ç–∞—É üïπ';
    rulesLabel = '–ï—Ä–µ–∂–µ–ª–µ—Ä üìú';
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
  await bot.sendMessage(chatId, firstMessage, {
    parseMode: 'Markdown',
    replyMarkup: bot.inlineKeyboard([
      [bot.inlineButton(startGameLabel, { url: 'https://racingapp.devnullteam.ru' })],
      [bot.inlineButton(rulesLabel, { callback: 'show_rules' })]
    ])
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –≤ –ø–∞–º—è—Ç–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  users[chatId] = rulesMessage;
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∞–≤–∏–ª–∞"
bot.on('callbackQuery', async (msg) => {
  if (msg.data === 'show_rules') {
    const chatId = msg.message.chat.id;
    const rulesMessage = users[chatId];

    if (rulesMessage) {
      await bot.sendMessage(chatId, rulesMessage, { parseMode: 'Markdown' });
    } else {
      await bot.sendMessage(chatId, '–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.');
    }
  }
});

export default bot;
